"use strict";function LikeMe(optionArr){	this.properties = {		id: 'like_me',		siteUrl: '',		likeBlockId: 'like_me-block',		action_id: 'play_global',		main_id: 'action-block',		skip_button_id: 'skip_button',		like_button_id: 'like_button',		watch_button_id: 'go-watch_again',		search_button_id: 'go-search',		perfect_button_id: 'go-perfect',		congratulations_id: 'congratulations',		action_button_block_id: 'action-button',		keep_playing_button_id: 'keep_playing',		match_block_id: 'match_block',		like_me_btn_class: 'like_me-btn',		id_user: 0,		min_id: 0,		get_users_url: 'like_me/ajaxGetUsers',		set_action_url: 'like_me/ajaxPlayAction',		congratulations_url: 'like_me/ajaxCongratulations',		contact_user_url: 'like_me/ajaxContactUser',		common_ancestor: 'body',	};	var _self = this;	var _temp_obj = {};		this.Init = function(options) {		_self.properties = $.extend(_self.properties, options);		_self.init_controls();		_self.loadUsers(_self.properties.action_id, 0);	};	this.uninit = function() {		$(_self.properties.common_ancestor)			.off('click', '#' + _self.properties.skip_button_id)			.off('click', '#' + _self.properties.like_button_id)			.off('click', '#' + _self.properties.watch_button_id)			.off('click', '#' + _self.properties.search_button_id)			.off('click', '#' + _self.properties.perfect_button_id)			.off('click', '#' + _self.properties.keep_playing_button_id)			.off('click', '.' + _self.properties.like_me_btn_class);		return this;	};		this.init_controls = function() {				$(_self.properties.common_ancestor)		.off('click','#' + _self.properties.skip_button_id).on('click','#'+ _self.properties.skip_button_id, function(){			_self.playAction('skip');		}).off('click', '#' + _self.properties.like_button_id).on('click', '#' + _self.properties.like_button_id, function(){			_self.playAction('like');		}).off('click', '#' + _self.properties.watch_button_id).on('click', '#' + _self.properties.watch_button_id, function(){			_self.loadUsers(_self.properties.action_id, 1);		}).off('click', '#' + _self.properties.search_button_id).on('click', '#' + _self.properties.search_button_id, function(){			_self.exitLikeMe('search');		}).off('click', '#' + _self.properties.perfect_button_id).on('click', '#' + _self.properties.perfect_button_id, function(){			_self.exitPerfectMatch('perfect_match');		}).off('click', '#' + _self.properties.keep_playing_button_id).on('click', '#' + _self.properties.keep_playing_button_id, function(){			_self.playAction('skip');		}).off('click', '.' + _self.properties.like_me_btn_class).on('click', '.' + _self.properties.like_me_btn_class, function(){			_self.deleteMatchBlock(500);		});	};		this.loadUsers = function (id, reload) {		$.ajax({			type: 'POST',			dataType: 'html',			url: _self.properties.siteUrl + _self.properties.get_users_url,			data: {type: id, reload: reload},			success: function(data){				data = _self.addJSParams(data);				$('#' + _self.properties.main_id).html(data);				$('html, body').animate({scrollTop: $('#' + _self.properties.likeBlockId).offset().top}, 1000);				$('#' + _self.properties.main_id + ' i').addClass('w');				if (id != 'matches') {					var difference = _self.imgHeight();					$('#' + _self.properties.main_id).find('img').height(difference);				}			},			error: function(jqXHR, textStatus, errorThrown){				if(typeof(console)!=='undefined'){					console.error(errorThrown);				}			},		});			};		this.playAction = function (action) {		var profile_id = $('#' + _self.properties.action_id + '>div').data('profile_id');		$.ajax({			type: 'POST',			dataType: 'html',			url: _self.properties.siteUrl + _self.properties.set_action_url,			data: {type: _self.properties.action_id, action: action, profile_id: profile_id},			success: function(data){				_self.deleteMatchBlock(0);				if(!data){					_self.congratulationsNotice(profile_id);				} else {					$('#' + _self.properties.main_id).hide("drop", {direction: "right"}, 100, function(){ 						$('#' + _self.properties.main_id).html(data).fadeIn().find('img').height(_temp_obj.img_height);					});				}			},			error: function(jqXHR, textStatus, errorThrown){				if(typeof(console)!=='undefined'){					console.error(errorThrown);				}			},		});	};		this.congratulationsNotice = function (profile_id) {		$.ajax({			type: 'POST',			dataType: 'html',			url: _self.properties.siteUrl + _self.properties.congratulations_url,			data: {profile_id: profile_id},			success: function(data){				_self.rebuildStyleCss(data);			},			error: function(jqXHR, textStatus, errorThrown){				if(typeof(console)!=='undefined'){					console.error(errorThrown);				}			},		});	};		this.imgHeight = function () {		if(typeof _temp_obj.img_height === 'undefined'){			_temp_obj.img_height = parseInt($(window).height())*70/100;		}		return _temp_obj.img_height;	};		this.exitLikeMe = function (section) {		document.location.href = _self.properties.siteUrl + 'users/' + section;	};		this.exitPerfectMatch = function (section) {		document.location.href = _self.properties.siteUrl + section;	};	this.rebuildStyleCss = function (data) {		$('#' + _self.properties.like_button_id).hide();		$(_self.properties.common_ancestor).append('<div id="'+_self.properties.match_block_id+'"></div>');		$('#' + _self.properties.match_block_id).addClass('load_content_bg').css({'z-index': '1000','width': '100%','height': '100%','position': 'fixed','top': '0','left': '0'}).show();		$('#' + _self.properties.match_block_id).html(data);		$('.' + _self.properties.like_me_btn_class).find('i').addClass('w');		$('.' + _self.properties.like_me_btn_class).hover(			function(){				$('.' + _self.properties.like_me_btn_class).find('i').removeClass('w');			},			function(){				$('.' + _self.properties.like_me_btn_class).find('i').addClass('w');			}		);		$('.' + _self.properties.like_me_btn_class).find('a:visible').css('display', 'block').prepend(function(){			 return $('.' + _self.properties.like_me_btn_class).data('name');		});        $('.' + _self.properties.like_me_btn_class).find('a').eq(1).hide();	};		this.deleteMatchBlock = function (time) {		if ($('div').is('#' + _self.properties.match_block_id)) {			setTimeout(function() { $('#' + _self.properties.match_block_id).hide() }, time);		}	};		this.escapeRegExp = function (str) {		return str.replace(/[]/g, "\\$&");	};		this.addJSParams = function (data) {		var str = 'siteUrl: site_url,';		var reg = new RegExp( _self.escapeRegExp(str).replace(/[]/g,'|') , 'gi' );		return data.replace(reg, '$&' + ' singleton: 0,');	};		_self.Init(optionArr);	}